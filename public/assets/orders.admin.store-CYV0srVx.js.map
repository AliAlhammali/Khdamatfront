{"version":3,"file":"orders.admin.store-CYV0srVx.js","sources":["../../src/services/admin/orders/orders.admin.service.js","../../src/stores/admin/orders/orders.admin.store.js"],"sourcesContent":["import ApiClient from \"@/helper/api.helper\";\r\n\r\nclass OrdersAdmin extends ApiClient {\r\n  constructor() {\r\n    super(\"admin/orders\");\r\n  }\r\n\r\n  get(params) {\r\n    return axios.get(this.url, { params });\r\n  }\r\n\r\n  show(id, params) {\r\n    return axios.get(`${this.url}/${id}`, { params });\r\n  }\r\n}\r\n\r\nexport default new OrdersAdmin();\r\n","import { defineStore } from \"pinia\";\r\nimport router from \"@/router\";\r\nimport OrdersAdmin from \"@/services/admin/orders/orders.admin.service\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { i18n } from \"@/plugins/I18n\";\r\n\r\nconst toast = useToast();\r\n\r\nexport const useOrdersAdminStore = defineStore(\"OrdersAdmin\", {\r\n  state: () => ({\r\n    records: [],\r\n    record: {},\r\n    uiFlags: {\r\n      isLoading: false,\r\n      isUpdating: false,\r\n    },\r\n  }),\r\n  getters: {},\r\n  actions: {\r\n    getOrdersAdmin: async function(params) {\r\n      this.uiFlags.isLoading = true;\r\n      try {\r\n        const { data } = await OrdersAdmin.get(params);\r\n        this.records = data;\r\n      } catch (error) {\r\n        return error;\r\n      } finally {\r\n        this.uiFlags.isLoading = false;\r\n      }\r\n    },\r\n    showOrdersAdmin: async function(id, params) {\r\n      this.uiFlags.isLoading = true;\r\n      try {\r\n        const { data } = await OrdersAdmin.show(id, params);\r\n        this.record = data.data;\r\n      } catch (error) {\r\n        return error;\r\n      } finally {\r\n        this.uiFlags.isLoading = false;\r\n      }\r\n    },\r\n    updateOrdersAdmin: async function(id, params) {\r\n      this.uiFlags.isUpdating = true;\r\n      try {\r\n        await OrdersAdmin.update(id, params);\r\n        toast.success(i18n.global.t(\"global.actions.edit_success\"));\r\n        // await this.getOrdersAdmin();\r\n      } catch (error) {\r\n        toast.error(i18n.global.t(\"global.actions.edit_error\"));\r\n        return error;\r\n      } finally {\r\n        this.uiFlags.isUpdating = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n"],"names":["OrdersAdmin","ApiClient","params","id","OrdersAdmin$1","toast","useToast","useOrdersAdminStore","defineStore","data","error","i18n"],"mappings":"mGAEA,MAAMA,UAAoBC,CAAU,CAClC,aAAc,CACZ,MAAM,cAAc,CACrB,CAED,IAAIC,EAAQ,CACV,OAAO,MAAM,IAAI,KAAK,IAAK,CAAE,OAAAA,CAAM,CAAE,CACtC,CAED,KAAKC,EAAID,EAAQ,CACf,OAAO,MAAM,IAAI,GAAG,KAAK,GAAG,IAAIC,CAAE,GAAI,CAAE,OAAAD,CAAQ,CAAA,CACjD,CACH,CAEA,MAAeE,EAAA,IAAIJ,ECVbK,EAAQC,EAAQ,EAETC,EAAsBC,EAAY,cAAe,CAC5D,MAAO,KAAO,CACZ,QAAS,CAAE,EACX,OAAQ,CAAE,EACV,QAAS,CACP,UAAW,GACX,WAAY,EACb,CACL,GACE,QAAS,CAAE,EACX,QAAS,CACP,eAAgB,eAAeN,EAAQ,CACrC,KAAK,QAAQ,UAAY,GACzB,GAAI,CACF,KAAM,CAAE,KAAAO,CAAI,EAAK,MAAMT,EAAY,IAAIE,CAAM,EAC7C,KAAK,QAAUO,CAChB,OAAQC,EAAO,CACd,OAAOA,CACf,QAAgB,CACR,KAAK,QAAQ,UAAY,EAC1B,CACF,EACD,gBAAiB,eAAeP,EAAID,EAAQ,CAC1C,KAAK,QAAQ,UAAY,GACzB,GAAI,CACF,KAAM,CAAE,KAAAO,CAAI,EAAK,MAAMT,EAAY,KAAKG,EAAID,CAAM,EAClD,KAAK,OAASO,EAAK,IACpB,OAAQC,EAAO,CACd,OAAOA,CACf,QAAgB,CACR,KAAK,QAAQ,UAAY,EAC1B,CACF,EACD,kBAAmB,eAAeP,EAAID,EAAQ,CAC5C,KAAK,QAAQ,WAAa,GAC1B,GAAI,CACF,MAAMF,EAAY,OAAOG,EAAID,CAAM,EACnCG,EAAM,QAAQM,EAAK,OAAO,EAAE,6BAA6B,CAAC,CAE3D,OAAQD,EAAO,CACd,OAAAL,EAAM,MAAMM,EAAK,OAAO,EAAE,2BAA2B,CAAC,EAC/CD,CACf,QAAgB,CACR,KAAK,QAAQ,WAAa,EAC3B,CACF,CACF,CACH,CAAC"}