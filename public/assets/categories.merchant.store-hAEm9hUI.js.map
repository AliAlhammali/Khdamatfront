{"version":3,"file":"categories.merchant.store-hAEm9hUI.js","sources":["../../src/services/merchant/categories/categories.merchant.service.js","../../src/stores/merchant/categories/categories.merchant.store.js"],"sourcesContent":["import ApiClient from \"@/helper/api.helper\";\r\n\r\nclass CategoriesMerchant extends ApiClient {\r\n  constructor() {\r\n    super(\"merchant/categories\");\r\n  }\r\n\r\n  get(params) {\r\n    return axios.get(this.url, { params });\r\n  }\r\n}\r\n\r\nexport default new CategoriesMerchant();\r\n","import { defineStore } from \"pinia\";\r\nimport router from \"@/router\";\r\nimport CategoriesMerchant from \"@/services/merchant/categories/categories.merchant.service\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { i18n } from \"@/plugins/I18n\";\r\n\r\nconst toast = useToast();\r\n\r\nexport const useCategoriesMerchantStore = defineStore(\"CategoriesMerchant\", {\r\n  state: () => ({\r\n    records: [],\r\n    record: {},\r\n    uiFlags: {\r\n      isLoading: false,\r\n      isCreated: false,\r\n      isUpdated: false,\r\n      isDeleted: false,\r\n    },\r\n    subCategories: [],\r\n    uiFlagsSub: {\r\n      isLoading: false,\r\n      isCreated: false,\r\n      isUpdated: false,\r\n      isDeleted: false,\r\n    },\r\n    mainCategories: [],\r\n    uiFlagsMain: {\r\n      isLoading: false,\r\n      isCreated: false,\r\n      isUpdated: false,\r\n      isDeleted: false,\r\n    },\r\n  }),\r\n  getters: {},\r\n  actions: {\r\n    getCategoriesMerchant: async function(params) {\r\n      this.uiFlags.isLoading = true;\r\n      try {\r\n        const { data } = await CategoriesMerchant.get(params);\r\n        this.records = data;\r\n      } catch (error) {\r\n        return error;\r\n      } finally {\r\n        this.uiFlags.isLoading = false;\r\n      }\r\n    },\r\n    getMainCategoriesMerchant: async function(params) {\r\n      this.uiFlagsMain.isLoading = true;\r\n      try {\r\n        const { data } = await CategoriesMerchant.get(params);\r\n        this.mainCategories = data;\r\n      } catch (error) {\r\n        return error;\r\n      } finally {\r\n        this.uiFlagsMain.isLoading = false;\r\n      }\r\n    },\r\n    getSubCategoriesMerchant: async function(params) {\r\n      this.uiFlagsSub.isLoading = true;\r\n      try {\r\n        const { data } = await CategoriesMerchant.get(params);\r\n        this.subCategories = data;\r\n      } catch (error) {\r\n        return error;\r\n      } finally {\r\n        this.uiFlagsSub.isLoading = false;\r\n      }\r\n    },\r\n    // showCategoriesMerchant: async function (id) {\r\n    //   this.uiFlags.isLoading = true;\r\n    //   try {\r\n    //     const { data } = await CategoriesMerchant.show(id);\r\n    //     this.record = data.data;\r\n    //   } catch (error) {\r\n    //     return error;\r\n    //   } finally {\r\n    //     this.uiFlags.isLoading = false;\r\n    //   }\r\n    // },\r\n    // createCategoriesMerchant: async function (payload) {\r\n    //   this.uiFlags.isCreated = true;\r\n    //   try {\r\n    //     await CategoriesMerchant.create(payload);\r\n    //     router.push({ name: \"Categories-merchant-dashboard\" });\r\n    //     toast.success(i18n.global.t(\"global.actions.add_success\"));\r\n    //   } catch (error) {\r\n    //     toast.error(i18n.global.t(\"global.actions.add_error\"));\r\n    //   } finally {\r\n    //     this.uiFlags.isCreated = false;\r\n    //   }\r\n    // },\r\n    // updateCategoriesMerchant: async function (payload) {\r\n    //   this.uiFlags.isUpdated = true;\r\n    //   try {\r\n    //     await CategoriesMerchant.update(payload.id, payload);\r\n    //     router.push({ name: \"Categories-merchant-dashboard\" });\r\n    //     toast.success(i18n.global.t(\"global.actions.edit_success\"));\r\n    //   } catch (error) {\r\n    //     toast.error(i18n.global.t(\"global.actions.edit_error\"));\r\n    //   } finally {\r\n    //     this.uiFlags.isUpdated = false;\r\n    //   }\r\n    // },\r\n    // deleteCategoriesMerchant: async function (id) {\r\n    //   this.uiFlags.isDeleted = true;\r\n    //   try {\r\n    //     await CategoriesMerchant.delete(id);\r\n    //     this.getCategoriesMerchant();\r\n    //     toast.success(i18n.global.t(\"global.actions.delete_success\"));\r\n    //   } catch (error) {\r\n    //     toast.error(i18n.global.t(\"global.actions.delete_error\"));\r\n    //   } finally {\r\n    //     this.uiFlags.isDeleted = false;\r\n    //   }\r\n    // }\r\n  },\r\n});\r\n"],"names":["CategoriesMerchant","ApiClient","params","CategoriesMerchant$1","useToast","useCategoriesMerchantStore","defineStore","data","error"],"mappings":"4FAEA,MAAMA,UAA2BC,CAAU,CACzC,aAAc,CACZ,MAAM,qBAAqB,CAC5B,CAED,IAAIC,EAAQ,CACV,OAAO,MAAM,IAAI,KAAK,IAAK,CAAE,OAAAA,CAAM,CAAE,CACtC,CACH,CAEA,MAAeC,EAAA,IAAIH,ECNLI,EAAW,EAEb,MAACC,EAA6BC,EAAY,qBAAsB,CAC1E,MAAO,KAAO,CACZ,QAAS,CAAE,EACX,OAAQ,CAAE,EACV,QAAS,CACP,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,EACZ,EACD,cAAe,CAAE,EACjB,WAAY,CACV,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,EACZ,EACD,eAAgB,CAAE,EAClB,YAAa,CACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,EACZ,CACL,GACE,QAAS,CAAE,EACX,QAAS,CACP,sBAAuB,eAAeJ,EAAQ,CAC5C,KAAK,QAAQ,UAAY,GACzB,GAAI,CACF,KAAM,CAAE,KAAAK,CAAI,EAAK,MAAMP,EAAmB,IAAIE,CAAM,EACpD,KAAK,QAAUK,CAChB,OAAQC,EAAO,CACd,OAAOA,CACf,QAAgB,CACR,KAAK,QAAQ,UAAY,EAC1B,CACF,EACD,0BAA2B,eAAeN,EAAQ,CAChD,KAAK,YAAY,UAAY,GAC7B,GAAI,CACF,KAAM,CAAE,KAAAK,CAAI,EAAK,MAAMP,EAAmB,IAAIE,CAAM,EACpD,KAAK,eAAiBK,CACvB,OAAQC,EAAO,CACd,OAAOA,CACf,QAAgB,CACR,KAAK,YAAY,UAAY,EAC9B,CACF,EACD,yBAA0B,eAAeN,EAAQ,CAC/C,KAAK,WAAW,UAAY,GAC5B,GAAI,CACF,KAAM,CAAE,KAAAK,CAAI,EAAK,MAAMP,EAAmB,IAAIE,CAAM,EACpD,KAAK,cAAgBK,CACtB,OAAQC,EAAO,CACd,OAAOA,CACf,QAAgB,CACR,KAAK,WAAW,UAAY,EAC7B,CACF,CAgDF,CACH,CAAC"}