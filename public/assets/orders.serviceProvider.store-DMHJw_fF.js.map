{"version":3,"file":"orders.serviceProvider.store-DMHJw_fF.js","sources":["../../src/services/serviceProvider/orders/orders.serviceProvider.service.js","../../src/stores/serviceProvider/orders/orders.serviceProvider.store.js"],"sourcesContent":["import ApiClient from \"@/helper/api.helper\";\r\n\r\nclass OrdersAdmin extends ApiClient {\r\n  constructor() {\r\n    super(\"service-provider/orders\");\r\n  }\r\n\r\n  get(params) {\r\n    return axios.get(this.url, { params });\r\n  }\r\n  show(id, params) {\r\n    return axios.get(`${this.url}/${id}`, { params });\r\n  }\r\n}\r\n\r\nexport default new OrdersAdmin();\r\n","import { defineStore } from \"pinia\";\r\nimport router from \"@/router\";\r\nimport OrdersServiceProvider from \"@/services/serviceProvider/orders/orders.serviceProvider.service\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { i18n } from \"@/plugins/I18n\";\r\n\r\nconst toast = useToast();\r\n\r\nexport const useOrdersServiceProviderStore = defineStore(\r\n  \"OrdersServiceProvider\",\r\n  {\r\n    state: () => ({\r\n      records: [],\r\n      record: {},\r\n      uiFlags: {\r\n        isLoading: false,\r\n        isUpdating: false,\r\n      },\r\n    }),\r\n    getters: {},\r\n    actions: {\r\n      getOrdersServiceProvider: async function(params) {\r\n        this.uiFlags.isLoading = true;\r\n        try {\r\n          const { data } = await OrdersServiceProvider.get(params);\r\n          this.records = data;\r\n        } catch (error) {\r\n          return error;\r\n        } finally {\r\n          this.uiFlags.isLoading = false;\r\n        }\r\n      },\r\n      showOrdersServiceProvider: async function(id, params) {\r\n        this.uiFlags.isLoading = true;\r\n        try {\r\n          const { data } = await OrdersServiceProvider.show(id, params);\r\n          this.record = data.data;\r\n        } catch (error) {\r\n          return error;\r\n        } finally {\r\n          this.uiFlags.isLoading = false;\r\n        }\r\n      },\r\n      updateOrdersServiceProvider: async function(id, params) {\r\n        this.uiFlags.isUpdating = true;\r\n        try {\r\n          await OrdersServiceProvider.update(id, params);\r\n          toast.success(i18n.global.t(\"global.actions.edit_success\"));\r\n          // await this.getOrdersServiceProvider();\r\n        } catch (error) {\r\n          toast.error(i18n.global.t(\"global.actions.edit_error\"));\r\n          return error;\r\n        } finally {\r\n          this.uiFlags.isUpdating = false;\r\n        }\r\n      },\r\n    },\r\n  },\r\n);\r\n"],"names":["OrdersAdmin","ApiClient","params","id","OrdersServiceProvider","toast","useToast","useOrdersServiceProviderStore","defineStore","data","error","i18n"],"mappings":"mGAEA,MAAMA,UAAoBC,CAAU,CAClC,aAAc,CACZ,MAAM,yBAAyB,CAChC,CAED,IAAIC,EAAQ,CACV,OAAO,MAAM,IAAI,KAAK,IAAK,CAAE,OAAAA,CAAM,CAAE,CACtC,CACD,KAAKC,EAAID,EAAQ,CACf,OAAO,MAAM,IAAI,GAAG,KAAK,GAAG,IAAIC,CAAE,GAAI,CAAE,OAAAD,CAAQ,CAAA,CACjD,CACH,CAEA,MAAeE,EAAA,IAAIJ,ECTbK,EAAQC,EAAQ,EAETC,EAAgCC,EAC3C,wBACA,CACE,MAAO,KAAO,CACZ,QAAS,CAAE,EACX,OAAQ,CAAE,EACV,QAAS,CACP,UAAW,GACX,WAAY,EACb,CACP,GACI,QAAS,CAAE,EACX,QAAS,CACP,yBAA0B,eAAeN,EAAQ,CAC/C,KAAK,QAAQ,UAAY,GACzB,GAAI,CACF,KAAM,CAAE,KAAAO,CAAI,EAAK,MAAML,EAAsB,IAAIF,CAAM,EACvD,KAAK,QAAUO,CAChB,OAAQC,EAAO,CACd,OAAOA,CACjB,QAAkB,CACR,KAAK,QAAQ,UAAY,EAC1B,CACF,EACD,0BAA2B,eAAeP,EAAID,EAAQ,CACpD,KAAK,QAAQ,UAAY,GACzB,GAAI,CACF,KAAM,CAAE,KAAAO,CAAI,EAAK,MAAML,EAAsB,KAAKD,EAAID,CAAM,EAC5D,KAAK,OAASO,EAAK,IACpB,OAAQC,EAAO,CACd,OAAOA,CACjB,QAAkB,CACR,KAAK,QAAQ,UAAY,EAC1B,CACF,EACD,4BAA6B,eAAeP,EAAID,EAAQ,CACtD,KAAK,QAAQ,WAAa,GAC1B,GAAI,CACF,MAAME,EAAsB,OAAOD,EAAID,CAAM,EAC7CG,EAAM,QAAQM,EAAK,OAAO,EAAE,6BAA6B,CAAC,CAE3D,OAAQD,EAAO,CACd,OAAAL,EAAM,MAAMM,EAAK,OAAO,EAAE,2BAA2B,CAAC,EAC/CD,CACjB,QAAkB,CACR,KAAK,QAAQ,WAAa,EAC3B,CACF,CACF,CACF,CACH"}